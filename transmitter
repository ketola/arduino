// RadioHead
#include <RH_ASK.h>
#include <SPI.h> // Not actually used but needed to compile
#include <OneWire.h>
#include <DallasTemperature.h>
#include <JeeLib.h> // Low power functions library
RH_ASK driver;
ISR(WDT_vect) { Sleepy::watchdogEvent(); } // Setup the watchdog

// Data wire is plugged into pin 2 on the Arduino
#define ONE_WIRE_BUS 2

#define DEVICE_ID "001"
// Setup a oneWire instance to communicate with any OneWire devices (not just Maxim/Dallas temperature ICs)
OneWire oneWire(ONE_WIRE_BUS);

// Pass our oneWire reference to Dallas Temperature. 
DallasTemperature sensors(&oneWire);

void setup()
{
  Serial.begin(9600);
   if (!driver.init())
    Serial.println("init failed");
    
  sensors.begin(); // IC Default 9 bit. If you have troubles consider upping it 12. Ups the delay giving the IC more time to process the temperature measurement
}
void loop()
{
  sensors.requestTemperatures(); // Send the command to get temperatures
  
  float temperature = sensors.getTempCByIndex(0);
  char tempF[10];
  dtostrf(temperature, 6, 2, tempF);
  
  char str[30];
  sprintf(str, "KSMS-001-001-%s", tempF);
  Serial.println(str);
  
  char* msg = str;
  
  driver.send((uint8_t *)msg, strlen(msg));
  driver.waitPacketSent();
  //delay(10000);
  Sleepy::loseSomeTime(10000);
}
